/*
 *  JavaSMT is an API wrapper for a collection of SMT solvers.
 *  This file is part of JavaSMT.
 *
 *  Copyright (C) 2007-2016  Dirk Beyer
 *  All rights reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package org.sosy_lab.java_smt.solvers.dreal4.drealjni;

public class Box {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Box(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Box obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(Box obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize1() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        drealJNI.delete_Box(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Box() {
    this(drealJNI.new_Box__SWIG_0(), true);
  }

  public Box(VariableVector variables) {
    this(drealJNI.new_Box__SWIG_1(VariableVector.getCPtr(variables), variables), true);
  }

  public Box(Box arg0) {
    this(drealJNI.new_Box__SWIG_2(Box.getCPtr(arg0), arg0), true);
  }

  public Box AssignOperator(Box arg0) {
    return new Box(
        drealJNI.Box_AssignOperator__SWIG_0(swigCPtr, this, Box.getCPtr(arg0), arg0), false);
  }

  public void Add(Variable v) {
    drealJNI.Box_Add__SWIG_0(swigCPtr, this, Variable.getCPtr(v), v);
  }

  public void Add(Variable v, double lb, double ub) {
    drealJNI.Box_Add__SWIG_1(swigCPtr, this, Variable.getCPtr(v), v, lb, ub);
  }

  public boolean empty() {
    return drealJNI.Box_empty(swigCPtr, this);
  }

  public void set_empty() {
    drealJNI.Box_set_empty(swigCPtr, this);
  }

  public int size() {
    return drealJNI.Box_size(swigCPtr, this);
  }

  public SWIGTYPE_p_ibex__Interval Indexing(int i) {
    return new SWIGTYPE_p_ibex__Interval(drealJNI.Box_Indexing__SWIG_0(swigCPtr, this, i), false);
  }

  public SWIGTYPE_p_ibex__Interval Indexing(Variable var) {
    return new SWIGTYPE_p_ibex__Interval(
        drealJNI.Box_Indexing__SWIG_1(swigCPtr, this, Variable.getCPtr(var), var), false);
  }

  public VariableVector variables() {
    return new VariableVector(drealJNI.Box_variables(swigCPtr, this), false);
  }

  public Variable variable(int i) {
    return new Variable(drealJNI.Box_variable(swigCPtr, this, i), false);
  }

  public boolean has_variable(Variable var) {
    return drealJNI.Box_has_variable(swigCPtr, this, Variable.getCPtr(var), var);
  }

  public SWIGTYPE_p_ibex__IntervalVector interval_vector() {
    return new SWIGTYPE_p_ibex__IntervalVector(drealJNI.Box_interval_vector(swigCPtr, this), false);
  }

  public SWIGTYPE_p_ibex__IntervalVector mutable_interval_vector() {
    return new SWIGTYPE_p_ibex__IntervalVector(
        drealJNI.Box_mutable_interval_vector(swigCPtr, this), false);
  }

  public int index(Variable var) {
    return drealJNI.Box_index(swigCPtr, this, Variable.getCPtr(var), var);
  }

  public DoubleIntPair MaxDiam() {
    return new DoubleIntPair(drealJNI.Box_MaxDiam(swigCPtr, this), true);
  }

  public BoxBoxPair bisect(int i) {
    return new BoxBoxPair(drealJNI.Box_bisect__SWIG_0(swigCPtr, this, i), true);
  }

  public BoxBoxPair bisect(Variable var) {
    return new BoxBoxPair(
        drealJNI.Box_bisect__SWIG_1(swigCPtr, this, Variable.getCPtr(var), var), true);
  }

  public Box InplaceUnion(Box b) {
    return new Box(drealJNI.Box_InplaceUnion(swigCPtr, this, Box.getCPtr(b), b), false);
  }
}
