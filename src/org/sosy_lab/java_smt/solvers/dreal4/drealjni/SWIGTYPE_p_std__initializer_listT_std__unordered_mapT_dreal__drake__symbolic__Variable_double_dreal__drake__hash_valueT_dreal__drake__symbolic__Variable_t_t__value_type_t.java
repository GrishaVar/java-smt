/*
 *  JavaSMT is an API wrapper for a collection of SMT solvers.
 *  This file is part of JavaSMT.
 *
 *  Copyright (C) 2007-2016  Dirk Beyer
 *  All rights reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package org.sosy_lab.java_smt.solvers.dreal4.drealjni;

public class SWIGTYPE_p_std__initializer_listT_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__value_type_t {
  private transient long swigCPtr;

  protected SWIGTYPE_p_std__initializer_listT_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__value_type_t(long cPtr, @SuppressWarnings("unused") boolean futureUse) {
    swigCPtr = cPtr;
  }

  protected SWIGTYPE_p_std__initializer_listT_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__value_type_t() {
    swigCPtr = 0;
  }

  protected static long getCPtr(SWIGTYPE_p_std__initializer_listT_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__value_type_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(SWIGTYPE_p_std__initializer_listT_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__value_type_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }
}

