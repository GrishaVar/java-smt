// This file is part of JavaSMT,
// an API wrapper for a collection of SMT solvers:
// https://github.com/sosy-lab/java-smt
//
// SPDX-FileCopyrightText: 2023 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package org.sosy_lab.java_smt.solvers.dreal4.drealjni;

public final class RelationalOperator {
  public static final RelationalOperator EQ = new RelationalOperator("EQ");
  public static final RelationalOperator NEQ = new RelationalOperator("NEQ");
  public static final RelationalOperator GT = new RelationalOperator("GT");
  public static final RelationalOperator GEQ = new RelationalOperator("GEQ");
  public static final RelationalOperator LT = new RelationalOperator("LT");
  public static final RelationalOperator LEQ = new RelationalOperator("LEQ");

  public int swigValue() {
    return swigValue;
  }

  @Override
  public String toString() {
    return swigName;
  }

  public static RelationalOperator swigToEnum(int swigValue) {
    if (swigValue < swigValues.length
        && swigValue >= 0
        && swigValues[swigValue].swigValue == swigValue) {
      return swigValues[swigValue];
    }
    for (int i = 0; i < swigValues.length; i++) {
      if (swigValues[i].swigValue == swigValue) {
        return swigValues[i];
      }
    }
    throw new IllegalArgumentException(
        "No enum " + RelationalOperator.class + " with value " + swigValue);
  }

  private RelationalOperator(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  @SuppressWarnings({"unused", "StaticAssignmentInConstructor"})
  private RelationalOperator(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue + 1;
  }

  @SuppressWarnings({"unused", "StaticAssignmentInConstructor"})
  private RelationalOperator(String swigName, RelationalOperator swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue + 1;
  }

  private static RelationalOperator[] swigValues = {EQ, NEQ, GT, GEQ, LT, LEQ};
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}
