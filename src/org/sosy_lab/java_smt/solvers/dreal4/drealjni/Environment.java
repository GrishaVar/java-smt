/*
 *  JavaSMT is an API wrapper for a collection of SMT solvers.
 *  This file is part of JavaSMT.
 *
 *  Copyright (C) 2007-2016  Dirk Beyer
 *  All rights reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package org.sosy_lab.java_smt.solvers.dreal4.drealjni;

public class Environment {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Environment(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Environment obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(Environment obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize1() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        drealJNI.delete_Environment(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Environment(Environment arg0) {
    this(drealJNI.new_Environment__SWIG_0(Environment.getCPtr(arg0), arg0), true);
  }

  public Environment AssignOperator(Environment arg0) {
    return new Environment(drealJNI.Environment_AssignOperator__SWIG_0(swigCPtr, this, Environment.getCPtr(arg0), arg0), false);
  }

  public Environment(Variable[] varArr) {
    this(drealJNI.new_Environment__SWIG_1(), true);
    for (Variable var : varArr) {
      if (var.is_dummy()) {
        throw new IllegalArgumentException("Dummy variable is detected in the initialization of an environment.");
      } else {
        this.insert(var, 0.0);
      }
    }
  }

  public Environment() {
    this(drealJNI.new_Environment__SWIG_1(), true);
  }

  public Environment(
      SWIGTYPE_p_std__initializer_listT_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__value_type_t init) {
    this(drealJNI.new_Environment__SWIG_2(SWIGTYPE_p_std__initializer_listT_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__value_type_t.getCPtr(init)), true);
  }

  public Environment(SWIGTYPE_p_std__initializer_listT_dreal__drake__symbolic__Variable_t vars) {
    this(drealJNI.new_Environment__SWIG_3(SWIGTYPE_p_std__initializer_listT_dreal__drake__symbolic__Variable_t.getCPtr(vars)), true);
  }

  public Environment(
      SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t m) {
    this(drealJNI.new_Environment__SWIG_4(SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t.getCPtr(m)), true);
  }

  public SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__iterator begin() {
    return new SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__iterator(drealJNI.Environment_begin__SWIG_0(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__iterator end() {
    return new SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__iterator(drealJNI.Environment_end__SWIG_0(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__const_iterator cbegin() {
    return new SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__const_iterator(drealJNI.Environment_cbegin(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__const_iterator cend() {
    return new SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__const_iterator(drealJNI.Environment_cend(swigCPtr, this), true);
  }

  public void insert(Variable key, double elem) {
    drealJNI.Environment_insert(swigCPtr, this, Variable.getCPtr(key), key, elem);
  }

  public boolean empty() {
    return drealJNI.Environment_empty(swigCPtr, this);
  }

  public long size() {
    return drealJNI.Environment_size(swigCPtr, this);
  }

  public SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__iterator find(Variable key) {
    return new SWIGTYPE_p_std__unordered_mapT_dreal__drake__symbolic__Variable_double_dreal__drake__hash_valueT_dreal__drake__symbolic__Variable_t_t__iterator(drealJNI.Environment_find__SWIG_0(swigCPtr, this, Variable.getCPtr(key), key), true);
  }

  public Variables domain() {
    return new Variables(drealJNI.Environment_domain(swigCPtr, this), true);
  }

  public String to_string() {
    return drealJNI.Environment_to_string(swigCPtr, this);
  }

  public SWIGTYPE_p_double Indexing(Variable key) {
    return new SWIGTYPE_p_double(drealJNI.Environment_Indexing__SWIG_0(swigCPtr, this, Variable.getCPtr(key), key), false);
  }

}
