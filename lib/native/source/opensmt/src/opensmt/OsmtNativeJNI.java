/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package opensmt;

public class OsmtNativeJNI {
  public final static native void delete_OpenSmt(long jarg1);
  public final static native long OpenSmt_getConfig(long jarg1, OpenSmt jarg1_);
  public final static native long OpenSmt_getLogic(long jarg1, OpenSmt jarg1_);
  public final static native long OpenSmt_getLRALogic(long jarg1, OpenSmt jarg1_);
  public final static native long OpenSmt_getLIALogic(long jarg1, OpenSmt jarg1_);
  public final static native long OpenSmt_getMainSolver(long jarg1, OpenSmt jarg1_);
  public final static native long OpenSmt_build__SWIG_0(int jarg1, String jarg2, boolean jarg3);
  public final static native long OpenSmt_build__SWIG_1(int jarg1, String jarg2);
  public final static native String OpenSmt_getVersion(long jarg1, OpenSmt jarg1_);
  public final static native long new_SMTOption__SWIG_0();
  public final static native long new_SMTOption__SWIG_1(int jarg1);
  public final static native long new_SMTOption__SWIG_2(double jarg1);
  public final static native long new_SMTOption__SWIG_3(String jarg1);
  public final static native boolean SMTOption_isEmpty(long jarg1, SMTOption jarg1_);
  public final static native String SMTOption_toString(long jarg1, SMTOption jarg1_);
  public final static native void delete_SMTOption(long jarg1);
  public final static native void ItpAlgorithm_x_set(long jarg1, ItpAlgorithm jarg1_, int jarg2);
  public final static native int ItpAlgorithm_x_get(long jarg1, ItpAlgorithm jarg1_);
  public final static native long ItpAlgorithm_getBoolMcmillan();
  public final static native long ItpAlgorithm_getBoolPudlak();
  public final static native long ItpAlgorithm_getBoolMcmillanp();
  public final static native long ItpAlgorithm_getBoolPs();
  public final static native long ItpAlgorithm_getBoolPsw();
  public final static native long ItpAlgorithm_getBoolPss();
  public final static native long ItpAlgorithm_getEufStrong();
  public final static native long ItpAlgorithm_getEufWeak();
  public final static native long ItpAlgorithm_getEufRandom();
  public final static native long ItpAlgorithm_getLraStrong();
  public final static native long ItpAlgorithm_getLraWeak();
  public final static native long ItpAlgorithm_getLraFactor();
  public final static native long ItpAlgorithm_getLraDecompStrong();
  public final static native long ItpAlgorithm_getLraDecompWeak();
  public final static native String ItpAlgorithm_getLraFactor0();
  public final static native long new_ItpAlgorithm();
  public final static native void delete_ItpAlgorithm(long jarg1);
  public final static native long new_SMTConfig();
  public final static native void delete_SMTConfig(long jarg1);
  public final static native void SMTConfig_setBooleanInterpolationAlgorithm(long jarg1, SMTConfig jarg1_, long jarg2, ItpAlgorithm jarg2_);
  public final static native void SMTConfig_setEUFInterpolationAlgorithm(long jarg1, SMTConfig jarg1_, long jarg2, ItpAlgorithm jarg2_);
  public final static native void SMTConfig_setLRAInterpolationAlgorithm(long jarg1, SMTConfig jarg1_, long jarg2, ItpAlgorithm jarg2_);
  public final static native void SMTConfig_setLRAStrengthFactor(long jarg1, SMTConfig jarg1_, String jarg2);
  public final static native void PTRef_x_set(long jarg1, PTRef jarg1_, long jarg2);
  public final static native long PTRef_x_get(long jarg1, PTRef jarg1_);
  public final static native long PTRef_Undef_get();
  public final static native long new_PTRef();
  public final static native void delete_PTRef(long jarg1);
  public final static native void delete_Logic(long jarg1);
  public final static native long Logic_mkAnd(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkOr(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkXor(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkImpl(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkNot(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long Logic_mkIte(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_, long jarg4, PTRef jarg4_);
  public final static native long Logic_mkEq(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkBoolVar(long jarg1, Logic jarg1_, String jarg2);
  public final static native long Logic_getTerm_true(long jarg1, Logic jarg1_);
  public final static native long Logic_getTerm_false(long jarg1, Logic jarg1_);
  public final static native String Logic_pp(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native void delete_ArithLogic(long jarg1);
  public final static native long ArithLogic_mkIntVar(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native long ArithLogic_mkRealVar(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native long ArithLogic_getTerm_IntZero(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getTerm_IntOne(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_mkNeg(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long ArithLogic_mkMinus(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkPlus(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkTimes(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkIntDiv(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkRealDiv(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkMod(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkLeq(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkGeq(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkLt(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkGt(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkIntConst(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native long ArithLogic_mkRealConst(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native long new_sstat__SWIG_0(int jarg1);
  public final static native long new_sstat__SWIG_1();
  public final static native boolean sstat_isTrue(long jarg1, sstat jarg1_);
  public final static native boolean sstat_isFalse(long jarg1, sstat jarg1_);
  public final static native boolean sstat_isUndef(long jarg1, sstat jarg1_);
  public final static native boolean sstat_isError(long jarg1, sstat jarg1_);
  public final static native void delete_sstat(long jarg1);
  public final static native void delete_MainSolver(long jarg1);
  public final static native long MainSolver_push(long jarg1, MainSolver jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean MainSolver_pop(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_check(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getStatus(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getModel(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getInterpolationContext(long jarg1, MainSolver jarg1_);
  public final static native long Model_evaluate(long jarg1, Model jarg1_, long jarg2, PTRef jarg2_);
  public final static native void delete_Model(long jarg1);
  public final static native void delete_InterpolationContext(long jarg1);
  public final static native long InterpolationContext_getSingleInterpolant(long jarg1, InterpolationContext jarg1_, long jarg2, VectorInt jarg2_);
  public final static native long new_VectorInt__SWIG_0();
  public final static native long new_VectorInt__SWIG_1(long jarg1, VectorInt jarg1_);
  public final static native long VectorInt_capacity(long jarg1, VectorInt jarg1_);
  public final static native void VectorInt_reserve(long jarg1, VectorInt jarg1_, long jarg2);
  public final static native boolean VectorInt_isEmpty(long jarg1, VectorInt jarg1_);
  public final static native void VectorInt_clear(long jarg1, VectorInt jarg1_);
  public final static native long new_VectorInt__SWIG_2(int jarg1, int jarg2);
  public final static native int VectorInt_doSize(long jarg1, VectorInt jarg1_);
  public final static native void VectorInt_doAdd__SWIG_0(long jarg1, VectorInt jarg1_, int jarg2);
  public final static native void VectorInt_doAdd__SWIG_1(long jarg1, VectorInt jarg1_, int jarg2, int jarg3);
  public final static native int VectorInt_doRemove(long jarg1, VectorInt jarg1_, int jarg2);
  public final static native int VectorInt_doGet(long jarg1, VectorInt jarg1_, int jarg2);
  public final static native int VectorInt_doSet(long jarg1, VectorInt jarg1_, int jarg2, int jarg3);
  public final static native void VectorInt_doRemoveRange(long jarg1, VectorInt jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectorInt(long jarg1);
  public final static native long ArithLogic_SWIGUpcast(long jarg1);
}
