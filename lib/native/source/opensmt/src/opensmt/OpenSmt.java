/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package opensmt;

public class OpenSmt {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OpenSmt(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OpenSmt obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(OpenSmt obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmtNativeJNI.delete_OpenSmt(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SMTConfig getConfig() {
    return new SMTConfig(OsmtNativeJNI.OpenSmt_getConfig(swigCPtr, this), false);
  }

  public Logic getLogic() {
    return new Logic(OsmtNativeJNI.OpenSmt_getLogic(swigCPtr, this), false);
  }

  public ArithLogic getLRALogic() {
    return new ArithLogic(OsmtNativeJNI.OpenSmt_getLRALogic(swigCPtr, this), false);
  }

  public ArithLogic getLIALogic() {
    return new ArithLogic(OsmtNativeJNI.OpenSmt_getLIALogic(swigCPtr, this), false);
  }

  public MainSolver getMainSolver() {
    return new MainSolver(OsmtNativeJNI.OpenSmt_getMainSolver(swigCPtr, this), false);
  }

  public static OpenSmt build(opensmt_logic _logic, String name, boolean prodInterpolants) {
    return new OpenSmt(OsmtNativeJNI.OpenSmt_build__SWIG_0(_logic.swigValue(), name, prodInterpolants), true);
  }

  public static OpenSmt build(opensmt_logic _logic, String name) {
    return new OpenSmt(OsmtNativeJNI.OpenSmt_build__SWIG_1(_logic.swigValue(), name), true);
  }

  public String getVersion() {
    return OsmtNativeJNI.OpenSmt_getVersion(swigCPtr, this);
  }

}
